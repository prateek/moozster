<%args>
$workflow
</%args>
<html>
<head>
    <script src="/javascripts/jquery.js"></script>
    <script src="/javascripts/d3.v3.min.js"></script>
    <script src="/javascripts/dagre-d3.min.js"></script>
<style>
rect {
    fill: #fff;
}

.node rect {
    stroke-width: 1.5px;
    stroke: #333;
    fill: none;
}

.node.OK { fill: green; }
.node.PREP { fill: blue; }
.node.FAILED { fill: red; }
.node.FAILED { fill: #deadaa; }

.edge rect {
    fill: #fff;
}


.edge path {
    fill: none;
    stroke: #333;
    stroke-width: 1.5px;
}
</style>
</head>
<body>
<div>
<input id="launch" type="button" onclick="launch()" value="launch" />
</div>

 <svg width=650 height=680>
    <g transform=""/>
</svg>

<script>
var job_id;

function launch() {
    $.post( '/workflow/<% $workflow %>/launch' ).done(function(data){
        console.log(data);
        job_id = JSON.parse(data)["id"];
        console.log( "job_id: " + job_id );
        update();
    }
    );
}

var max = 10;
var state_color = {
    "OK": "green",
    "PREP": "blue",
    "FAILED": "red",
    "KILLED": "pink",
    "DONE": "lightgreen"
};

function update() {
    $.get( '/job/' + job_id ).done(function(data){
        console.log('update');
        console.log(data);
        data = JSON.parse(data);
        for ( var i = 0; i < data.actions.length; i++ ) {
            var action = data.actions[i];
            console.log( action["name"] + " : " + action["status"] );
            if ( action["name"] == ':start:' )  {
                action["name"] = 'START';
            }
            $('#node-' + action["name"])
                .attr('fill', state_color[action["status"]]);
        }

        if ( data.status == 'RUNNING' ) {
            setTimeout( 'update()', 2000 );
        }
    });
}
//GET /oozie/v1/job/job-3?show=info

$(function() {
    $.get( '/workflow/<% $workflow %>/graph' ).done(function(graph){

    console.log(graph);

    var nodes = new Object();
    var g = new dagreD3.Digraph();

    for ( source in graph ) {
        if ( nodes[source] == null ) {
            g.addNode( source,    { label: source });
        }
        nodes[source] = 1;
        for ( var i = 0; i < graph[source].length; i++ ) {
            var dest = graph[source][i];
            if ( nodes[dest]  == null ) {
                g.addNode( dest,    { label: dest });
                nodes[dest] = 1;
            }
            g.addEdge( null, source, dest );
        }
    }

    var renderer = new dagreD3.Renderer();

    var oldDrawNode = renderer.drawNode();
    renderer.drawNode(function(graph, u, svg) {
        oldDrawNode(graph, u, svg);
        svg.attr("id", "node-" + u);
    });

    renderer.run(g, d3.select("svg g"));
    });
});
</script>
</body>
</html>
